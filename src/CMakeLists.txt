option(COVERAGE "enable coverage testing" OFF)

find_package(libelf REQUIRED)
find_package(zlib REQUIRED)
find_package(libzip REQUIRED)
find_package(libyaml REQUIRED)

include_directories(${libelf_INCLUDE_DIRS})
include_directories(${zlib_INCLUDE_DIRS})
include_directories(${libzip_INCLUDE_DIRS})
include_directories(${libyaml_INCLUDE_DIRS})

set(CMAKE_C_FLAGS -std=gnu99) # -Wall -Wextra

if(USE_BUNDLED_ENDIAN_H)
	add_definitions(-DUSE_BUNDLED_ENDIAN_H)
endif()

if(COVERAGE)
	add_definitions(-g -O0 -Wall -W -fprofile-arcs -ftest-coverage)
	set(CMAKE_LDFLAGS "-fprofile-arcs -ftest-coverage")
	set(LIBCOV gcov)
else()
	set(LIBCOV)
endif()

if(DEFINED ZIP_STATIC)
	add_definitions(-DZIP_STATIC)
endif()

if (WIN32)
	add_definitions(-DYAML_DECLARE_STATIC)
endif()

add_executable(vita-libs-gen   vita-libs-gen.c import.c import-parse.c yaml-tree.c yaml-treeutil.c)
add_executable(vita-elf-create vita-elf-create.c velf.c import.c import-parse.c export-parse.c elf-defs.c sce-elf.c varray.c elf-utils.c sha256.c yaml-tree.c yaml-treeutil.c)
add_executable(vita-mksfoex    vita-mksfoex.c)
add_executable(vita-make-sfo   vita-make-sfo.c)
add_executable(vita-make-fself vita-make-fself.c sha256.c)
add_executable(vita-make-vpk   vita-make-vpk.c)
add_executable(vita-pack-vpk   vita-pack-vpk.c)
add_executable(vita-elf-export vita-elf-export.c yaml-tree.c yaml-treeutil.c sha256.c yaml-emitter.c export-parse.c)

target_link_libraries(vita-libs-gen   ${LIBCOV} ${libyaml_LIBRARIES})
target_link_libraries(vita-elf-create ${LIBCOV} ${libyaml_LIBRARIES} ${libelf_LIBRARIES})
target_link_libraries(vita-mksfoex    ${LIBCOV})
target_link_libraries(vita-make-sfo   ${LIBCOV})
target_link_libraries(vita-make-fself ${LIBCOV} ${zlib_LIBRARIES})
target_link_libraries(vita-make-vpk   ${LIBCOV} ${zlib_LIBRARIES} ${libzip_LIBRARIES})
target_link_libraries(vita-pack-vpk   ${LIBCOV} ${zlib_LIBRARIES} ${libzip_LIBRARIES})
target_link_libraries(vita-elf-export ${LIBCOV} ${libyaml_LIBRARIES})

install(TARGETS vita-libs-gen DESTINATION bin)
install(TARGETS vita-elf-create DESTINATION bin)
install(TARGETS vita-mksfoex DESTINATION bin)
install(TARGETS vita-make-sfo DESTINATION bin)
install(TARGETS vita-make-fself DESTINATION bin)
install(TARGETS vita-make-vpk DESTINATION bin)
install(TARGETS vita-pack-vpk DESTINATION bin)
install(TARGETS vita-elf-export DESTINATION bin)

if(COVERAGE)
	enable_testing()
	add_test(NAME coverage COMMAND uname)
endif()